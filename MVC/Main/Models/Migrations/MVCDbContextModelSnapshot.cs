// <auto-generated />
using Main.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Main.Models.Migrations
{
    [DbContext(typeof(MVCDbContext))]
    partial class MVCDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Main.Models.Entity.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ManagerName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManagerName = "Dr. Tarek Mostafa",
                            Name = "Software Development"
                        },
                        new
                        {
                            Id = 2,
                            ManagerName = "Eng. Amal Fahmy",
                            Name = "Quality Assurance"
                        },
                        new
                        {
                            Id = 3,
                            ManagerName = "Mr. Hesham Magdy",
                            Name = "IT Operations"
                        });
                });

            modelBuilder.Entity("Main.Models.Entity.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("varchar");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cairo",
                            DepartmentId = 1,
                            JobTitle = "Software Engineer",
                            Name = "Ali Mahmoud",
                            Salary = 6000
                        },
                        new
                        {
                            Id = 2,
                            Address = "Alexandria",
                            DepartmentId = 2,
                            JobTitle = "QA Engineer",
                            Name = "Sara Ahmed",
                            Salary = 7500
                        },
                        new
                        {
                            Id = 3,
                            Address = "Cairo",
                            DepartmentId = 1,
                            JobTitle = "Project Manager",
                            Name = "Mohamed Nabil",
                            Salary = 8000
                        },
                        new
                        {
                            Id = 4,
                            Address = "Giza",
                            DepartmentId = 3,
                            JobTitle = "UI/UX Designer",
                            Name = "Yasmin Fathy",
                            Salary = 5500
                        },
                        new
                        {
                            Id = 5,
                            Address = "6th October",
                            DepartmentId = 2,
                            JobTitle = "DevOps Engineer",
                            Name = "Omar Khaled",
                            Salary = 9000
                        },
                        new
                        {
                            Id = 6,
                            Address = "Mansoura",
                            DepartmentId = 3,
                            JobTitle = "Database Administrator",
                            Name = "Mona Samir",
                            Salary = 6700
                        },
                        new
                        {
                            Id = 7,
                            Address = "Cairo",
                            DepartmentId = 1,
                            JobTitle = "Backend Developer",
                            Name = "Khaled Hussein",
                            Salary = 6200
                        },
                        new
                        {
                            Id = 8,
                            Address = "Helwan",
                            DepartmentId = 1,
                            JobTitle = "Frontend Developer",
                            Name = "Laila Gamal",
                            Salary = 5800
                        },
                        new
                        {
                            Id = 9,
                            Address = "Zagazig",
                            DepartmentId = 2,
                            JobTitle = "System Analyst",
                            Name = "Tamer Ali",
                            Salary = 7200
                        },
                        new
                        {
                            Id = 10,
                            Address = "Fayoum",
                            DepartmentId = 3,
                            JobTitle = "Support Engineer",
                            Name = "Nour Hassan",
                            Salary = 6300
                        });
                });

            modelBuilder.Entity("Main.Models.Entity.Employee", b =>
                {
                    b.HasOne("Main.Models.Entity.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Main.Models.Entity.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
